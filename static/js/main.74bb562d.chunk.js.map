{"version":3,"sources":["components/header/header.component.jsx","components/counter/counter.component.jsx","components/meta-tags/meta-tags.component.jsx","pages/homepage/homepage.component.jsx","pages/links/links.component.jsx","pages/robots-txt/robots-txt.component.jsx","pages/htaccess/htaccess.component.jsx","components/page-speed-insights/page-speed-insights.component.jsx","components/footer/footer.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","react_router_dom","to","Counter","className","rows","cols","id","onChange","e","preventDefault","count","document","getElementById","string","innerText","value","length","MetaTags","HomePage","counter_component","meta_tags_component","LinksPage","href","rel","target","RobotsTxt","HtaccessPage","PageSpeedInsights","type","Footer","App","header_component","react_router","exact","path","component","Misc","footer_component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.74bb562d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport './header.styles.scss';\n\nconst Header = () => (\n        <header>\n            <h1>SEO Note</h1>\n            <nav>\n                <ul>\n                    <li><Link to=\"/seo/\">Meta tags</Link></li>\n                    <li><Link to=\"/seo/robots-txt/\">robots.txt</Link></li>\n                    <li><Link to=\"/seo/htaccess/\">.htaccess</Link></li>\n                    {/*<li><Link to=\"/seo/progressive-web-app/\">PWA</Link></li> */}\n                    <li><Link to=\"/seo/links/\">Useful Links</Link></li>\n                    {/* <li><Link to=\"/seo/misc/\">Misc</Link></li> */}\n                </ul>\n            </nav>\n        </header>\n);\n\nexport default Header;","import React from 'react';\n\nimport './counter.styles.scss';\n\nconst Counter = () => {\n    function count(e){\n        e.preventDefault();\n        const count = document.getElementById('count');\n        const string = document.getElementById('string');\n\n        count.innerText = string.value.length;\n        ;\n    }\n    return(\n        <div className='counter'>\n            <div>\n                <textarea rows=\"8\" cols=\"50\" id=\"string\" onChange={count}></textarea>\n            </div>\n\n            <span id=\"count\">0</span>\n        </div>\n        )\n    };\n\nexport default Counter;","import React from 'react';\n\nimport './meta-tags.styles.scss';\n\nconst MetaTags = () => (\n    <div>\n        <dl>\n            <dt>On-Page</dt>\n            <dd>range: each single HTML page.<br />\n            For...<br />\n            - meta title: 50-60(max.75). e.g. Your page title | Your brand name <br />\n            - meta description: 135-160(For mobile, &lt;130). Avoid duplicated description over pages.(Google can penalize your site for it.)<br />\n            - each content-oriented page, minimum 400 words of content to be indexed correctly.\n        But 1000+ is recommended.<br />\n        - URL...less than 90 characters are recommended.<br />\n        Dynamic URL is not recommended for SEO. Consider using perma-links. e.g. Apache: mod_rewrite \n            </dd>\n            <dt>On-Site</dt>\n            <dd>range: The structure of the webpage. Avoid duplicated pages, clear structure for crawlers, internal linking.<br />\n            robots.txt<br />\n            sitemap.xml\n            </dd>\n            <dt>Off-Site</dt>\n            <dd>range: Outside of the webpage. Third parties, other webpages, Social medias, etc.<br />\n            Google Analytics, Google Search Console.\n            </dd>\n        </dl>\n\n        <h3>Code Snippets</h3>\n\n        <h4>Basic Meta tags</h4>\n        <pre>{`<meta charset=\"utf-8\">\n<title>Your Page Title</title>\n<link rel=\"canonical\" href=\"https://www.#yoursite#.com/\" />\n<meta name=\"description\" content=\"Your description\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">`}</pre>\n\n        <h4>OG meta tags</h4>\n        <pre>\n        &lt;meta property=”og:type” content=”article” /> <br />\n        &lt;meta property=”og:title” content=”title of the page” /><br />\n        &lt;meta property=”og:description” content=”description of the page” /><br />\n        &lt;meta property=”og:image” content=”image thmbnail” /><br />\n        &lt;meta property=”og:url” content=”your url” /><br />\n        &lt;meta property=”og:site_name” content=”site name” />\n        </pre>\n\n        <h4>Twitter card meta tags</h4>\n        <pre>\n        &lt;meta name=”twitter:title” content=”title of the page”><br />\n        &lt;meta name=”twitter:description” content=”description of the page”><br />\n        &lt;meta name=”twitter:image” content=”image thumbnail”><br />\n        &lt;meta name=”twitter:site” content=”@username”><br />\n        &lt;meta name=”twitter:creator” content=”@username”>\n        </pre>\n        <div>\n        <p>SDM...Structured Data Markup</p>\n        <p>Microdata...https://en.wikipedia.org/wiki/Microdata_(HTML)<br />\n        Google's Rich Snippet Testing Tool<br />\n        JSON-LD...https://en.wikipedia.org/wiki/JSON-LD<br/>\n        </p>\n\n        <h4>JSON-LD</h4>\n        <pre>{`<script type=\"application/ld+json\">\n        {\n            \"@context\": {\n            \"name\": \"http://xmlns.com/foaf/0.1/name\",\n            \"homepage\": {\n                \"@id\": \"http://xmlns.com/foaf/0.1/workplaceHomepage\",\n                \"@type\": \"@id\"\n            },\n            \"Person\": \"http://xmlns.com/foaf/0.1/Person\"\n            },\n            \"@id\": \"https://me.example.com\",\n            \"@type\": \"Person\",\n            \"name\": \"John Smith\",\n            \"homepage\": \"https://www.example.com/\"\n        }\n        </script>\n        `}\n        </pre>\n        </div>\n\n        \n    </div>\n);\n\nexport default MetaTags;","import React from 'react';\n\nimport Counter from '../../components/counter/counter.component';\nimport MetaTags from '../../components/meta-tags/meta-tags.component';\n\nimport './homepage.styles.scss';\n\n\nconst HomePage = () => (\n      <div>\n        <Counter />\n        <MetaTags />   \n      </div>\n    );\n\nexport default HomePage;\n\n","import React from 'react';\n\nimport './links.styles.scss';\n\nconst LinksPage = () => (\n      <div>\n        <h4>Photos</h4>\n        <ul>\n          <li><a href=\"https://unsplash.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Unsplash</a></li>\n          <li><a href=\"https://www.pakutaso.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Pakutaso(Japanese)</a></li>\n        </ul>\n\n        <h4>Icons</h4>\n        <ul>\n          <li><a href=\"https://icooon-mono.com/?lang=en\" rel=\"noopener noreferrer\" target=\"_blank\">ICOOON MONO</a></li>\n          <li><a href=\"https://fontawesome.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Font Awesome</a></li>\n          <li><a href=\"https://www.utf8icons.com/subsets/dingbats\" rel=\"noopener noreferrer\" target=\"_blank\">Dingbats</a></li>\n          <li><a href=\"https://icomoon.io/#preview-free\" rel=\"noopener noreferrer\" target=\"_blank\">IcoMoon</a></li>\n          <li><a href=\"https://thenounproject.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Noun Project</a></li> \n        </ul>\n\n        <h4>Images compression</h4>\n        <ul>\n          <li><a href=\"https://tinypng.com/\" rel=\"noopener noreferrer\" target=\"_blank\">TinyPng</a></li>\n        </ul>\n\n        <h4>Website analysis</h4>\n        <ul>\n          <li><a href=\"https://developers.google.com/speed/pagespeed/insights/\" rel=\"noopener noreferrer\" target=\"_blank\">Google Speed Insights</a></li>\n          <li><a href=\"https://tools.pingdom.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Pingdom Tools</a></li>\n          <li><a href=\"https://www.webpagetest.org/\" rel=\"noopener noreferrer\" target=\"_blank\">WEBPAGETEST</a></li>  \n        </ul>\n\n        <h4>Color Pallete</h4>\n        <ul>\n          <li><a href=\"https://color.adobe.com/create/color-wheel/\" rel=\"noopener noreferrer\" target=\"_blank\">Adobe Color</a></li>\n          <li><a href=\"https://materialuicolors.co/\" rel=\"noopener noreferrer\" target=\"_blank\">materialuicolors</a></li>\n        </ul>\n\n        <h4>JSONPlaceholder</h4>\n        <ul>       \n          <li><a href=\"https://jsonplaceholder.typicode.com/\" rel=\"noopener noreferrer\" target=\"_blank\">JSONPlaceholder</a></li>\n        </ul>\n\n        <h4>Tips</h4>\n        <ul>       \n          <li><a href=\"https://web.dev/extract-critical-css/\" rel=\"noopener noreferrer\" target=\"_blank\">Extract Critical CSS</a></li>\n        </ul>\n\n        \n      </div>\n    );\n\nexport default LinksPage;\n\n","import React from 'react';\n\nimport '../../components/meta-tags/meta-tags.styles.scss';\n\nconst RobotsTxt = () => (\n    <div>\n        <h3>robots.txt</h3>\n        <h4>Prevent search engines to index your site</h4>\n        <pre>{`\nUser-agent: *\nDisallow: /\n        `}\n        </pre>\n    </div>\n);\n\nexport default RobotsTxt;","import React from 'react';\n\nimport './htaccess.styles.scss';\n\nconst HtaccessPage = () => (\n    <div>\n    <h2>Apache .htaccess file</h2>\n    <section>\n    <h3>Basics</h3>\n    <pre>{`RewriteEngine on //Redirect requests to a different URL\n    # CORE\n    Options -Indexes //Disable all directory views(recommended for better security)\n    Options -MultiViews //Disable multi-views (recommended for canonical URIs) //Enable symlinks (required for permalinks/rewrites, e.g., index.php → index.html)\n    Options +FollowSymlinks //Specify the default character set for any file served text/plain or text/html (recommended for usability)\n    AddDefaultCharset UTF-8 //Disables the server signature (recommended for better security)\n    ServerSignature Off //Disables the ETag Header (recommended for performance)\n    FileETag none\n    `}</pre>\n    \n    </section>\n        <section>\n            <h3>.htaccess password protection</h3>\n            To enable .htaccecc password protection, use .htaccess. &amp; .htpasswd file.\n            <pre>AuthType Basic<br />\n            AuthName \"Password Protected Area\"<br />\n            AuthUserFile /path/to/.htpasswd<br />\n            Require valid-user\n            </pre>\n            In the \"/path/to/.htpaswwd\" file, add password.\n            <pre>\n            test:dGRkPurkuWmW2\n            </pre>\n        </section>\n        <section>\n            <h3>Blocking users based on IP</h3>\n            Blocking and allowing users are done by a firewall.\n            <pre>{`order allow,deny\ndeny from 255.x.x.x\ndeny from 123.x.x.x\nallow from all\n\nRewriteCond %{REMOTE_ADDR} 192\\.168\\.121\\. //Redirect specific user to another link\nRewriteRule .* https://google.com [R,L]`}</pre>\n\n<p>Allow only specific IP</p>\n<pre>{`order deny,allow\nDeny from all\n# whitelist IP Address 1\nallow from xx.xxx.xx.xx\n# whitelist IP Address 2\nallow from xx.xxx.xx.xx`}</pre>\n\n        </section>\n        <section>\n            <h3>Browser Caching</h3>\n            <pre>{`<IfModule mod_expires.c>\n    ExpiresActive On\n    ExpiresByType image/jpg \"access 1 year\"\n    ExpiresByType image/jpeg \"access 1 year\"\n    ExpiresByType image/gif \"access 1 year\"\n    ExpiresByType image/png \"access 1 year\"\n    ExpiresByType text/css \"access 1 month\"\n    ExpiresByType text/html \"access 1 month\"\n    ExpiresByType application/pdf \"access 1 month\"\n    ExpiresByType text/x-javascript \"access 1 month\"\n    ExpiresByType image/x-icon \"access 1 year\"\n    ExpiresDefault \"access 1 month\"\n</IfModule>`}</pre>\n        </section>\n\n        <section>\n            <h3>Enable gzip</h3>\n            <pre>{`# compress text, html, javascript, css, xml:\nAddOutputFilterByType DEFLATE text/plain\nAddOutputFilterByType DEFLATE text/html\nAddOutputFilterByType DEFLATE text/xml\nAddOutputFilterByType DEFLATE text/css\nAddOutputFilterByType DEFLATE application/xml\nAddOutputFilterByType DEFLATE application/xhtml+xml\nAddOutputFilterByType DEFLATE application/rss+xml\nAddOutputFilterByType DEFLATE application/javascript\nAddOutputFilterByType DEFLATE application/x-javascript\n\n# Or, compress certain file types by extension:\n<files *.html>\nSetOutputFilter DEFLATE\n</files>`}</pre>\n        </section>\n\n        <section>\n            <h3>301 Redirects</h3>\n            <pre>{`Redirect 301 https://yourwebsite.com/old-page https://yourwebsite.com/new-page`}</pre>\n        </section>\n        <section>\n        <h3>Hide directory listing</h3>\n        When your website doesn't have index.html in your root folder, the index listing can be displayed. From security persprective, it's not good users can see all of files of your website. To hide the directory listing, use code below.\n        <pre>{`Options -Indexes`}</pre>\n        </section>\n        <section>\n        <h3>Redirect to custom 404 page when a page is not found</h3>\n        <pre>{`ErrorDocument 404 http://www.yoursite.com/404page.html`}</pre>\n        </section>\n      \n    </div>\n);\n\nexport default HtaccessPage;","import React from 'react';\n\nimport './page-speed-insights.scss';\n\nconst PageSpeedInsights = () => {\n\n\nreturn(\n    <div>\n        <form>\n        <input type=\"text\"></input> \n        </form>\n        <button>Analyze</button>\n    </div>\n)\n}\n\nexport default PageSpeedInsights;\n","import React from 'react';\n\nimport './footer.styles.scss';\n\nconst Footer = () => (\n    <footer>\n    <small>&copy; HelloTakako. All rights reserved.</small>\n    </footer>\n)\n\nexport default Footer;","import React from 'react';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Header from './components/header/header.component';\nimport HomePage from './pages/homepage/homepage.component';\nimport LinksPage from './pages/links/links.component';\nimport RobotsTxt from './pages/robots-txt/robots-txt.component';\nimport HtaccessPage from './pages/htaccess/htaccess.component';\nimport Misc from './components/page-speed-insights/page-speed-insights.component';\nimport Footer from './components/footer/footer.component';\n\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n        <Header />\n        <main>\n        <Route exact path=\"/seo/\" component={HomePage} />\n        <Route path=\"/seo/links/\" component={LinksPage} />\n        <Route path=\"/seo/robots-txt/\" component={RobotsTxt} />\n        <Route path=\"/seo/htaccess/\" component={HtaccessPage} />\n        <Route path=\"/seo/misc/\" component={Misc} />\n        </main>\n        <Footer />\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}